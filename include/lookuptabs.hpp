#pragma once
#include <array>
#include "bitutil.hpp"
#define getray(direc, pos) RAYS[(direc)][get_trailing_zeros(pos)]
constexpr std::array<U64, 64> KING_ATTACKS = {0x0000000000000302ULL, 0x0000000000000705ULL, 0x0000000000000e0aULL, 0x0000000000001c14ULL, 0x0000000000003828ULL, 0x0000000000007050ULL, 0x000000000000e0a0ULL, 0x000000000000c040ULL, 
0x0000000000030203ULL, 0x0000000000070507ULL, 0x00000000000e0a0eULL, 0x00000000001c141cULL, 0x0000000000382838ULL, 0x0000000000705070ULL, 0x0000000000e0a0e0ULL, 0x0000000000c040c0ULL, 
0x0000000003020300ULL, 0x0000000007050700ULL, 0x000000000e0a0e00ULL, 0x000000001c141c00ULL, 0x0000000038283800ULL, 0x0000000070507000ULL, 0x00000000e0a0e000ULL, 0x00000000c040c000ULL, 
0x0000000302030000ULL, 0x0000000705070000ULL, 0x0000000e0a0e0000ULL, 0x0000001c141c0000ULL, 0x0000003828380000ULL, 0x0000007050700000ULL, 0x000000e0a0e00000ULL, 0x000000c040c00000ULL, 
0x0000030203000000ULL, 0x0000070507000000ULL, 0x00000e0a0e000000ULL, 0x00001c141c000000ULL, 0x0000382838000000ULL, 0x0000705070000000ULL, 0x0000e0a0e0000000ULL, 0x0000c040c0000000ULL, 
0x0003020300000000ULL, 0x0007050700000000ULL, 0x000e0a0e00000000ULL, 0x001c141c00000000ULL, 0x0038283800000000ULL, 0x0070507000000000ULL, 0x00e0a0e000000000ULL, 0x00c040c000000000ULL, 
0x0302030000000000ULL, 0x0705070000000000ULL, 0x0e0a0e0000000000ULL, 0x1c141c0000000000ULL, 0x3828380000000000ULL, 0x7050700000000000ULL, 0xe0a0e00000000000ULL, 0xc040c00000000000ULL, 
0x0203000000000000ULL, 0x0507000000000000ULL, 0x0a0e000000000000ULL, 0x141c000000000000ULL, 0x2838000000000000ULL, 0x5070000000000000ULL, 0xa0e0000000000000ULL, 0x40c0000000000000ULL};
constexpr std::array<U64, 64> KNIGHT_ATTACKS = {0x0000000000020400ULL, 0x0000000000050800ULL, 0x00000000000a1100ULL, 0x0000000000142200ULL, 0x0000000000284400ULL, 0x0000000000508800ULL, 0x0000000000a01000ULL, 0x0000000000402000ULL, 
0x0000000002040004ULL, 0x0000000005080008ULL, 0x000000000a110011ULL, 0x0000000014220022ULL, 0x0000000028440044ULL, 0x0000000050880088ULL, 0x00000000a0100010ULL, 0x0000000040200020ULL, 
0x0000000204000402ULL, 0x0000000508000805ULL, 0x0000000a1100110aULL, 0x0000001422002214ULL, 0x0000002844004428ULL, 0x0000005088008850ULL, 0x000000a0100010a0ULL, 0x0000004020002040ULL,
0x0000020400040200ULL, 0x0000050800080500ULL, 0x00000a1100110a00ULL, 0x0000142200221400ULL, 0x0000284400442800ULL, 0x0000508800885000ULL, 0x0000a0100010a000ULL, 0x0000402000204000ULL,
0x0002040004020000ULL, 0x0005080008050000ULL, 0x000a1100110a0000ULL, 0x0014220022140000ULL, 0x0028440044280000ULL, 0x0050880088500000ULL, 0x00a0100010a00000ULL, 0x0040200020400000ULL,
0x0204000402000000ULL, 0x0508000805000000ULL, 0x0a1100110a000000ULL, 0x1422002214000000ULL, 0x2844004428000000ULL, 0x5088008850000000ULL, 0xa0100010a0000000ULL, 0x4020002040000000ULL,
0x0400040200000000ULL, 0x0800080500000000ULL, 0x1100110a00000000ULL, 0x2200221400000000ULL, 0x4400442800000000ULL, 0x8800885000000000ULL, 0x100010a000000000ULL, 0x2000204000000000ULL,
0x0004020000000000ULL, 0x0008050000000000ULL, 0x00110a0000000000ULL, 0x0022140000000000ULL, 0x0044280000000000ULL, 0x0088500000000000ULL, 0x0010a00000000000ULL, 0x0020400000000000ULL};
constexpr std::array<U64, 64> rookmagics = {0x5080002840008011ULL, 0x0d60001000200a80ULL, 0x002800100120001aULL, 0x0480120410000800ULL, 0x2050201001000400ULL, 0x0020010c048c0200ULL, 0x002e000800458100ULL, 0x8100005823000082ULL, 
0x1410900080061302ULL, 0x20a4128008440221ULL, 0x0090020423201040ULL, 0x0802880030008010ULL, 0x8000400440010200ULL, 0x02080a0111024008ULL, 0xc000400041040088ULL, 0x004220088000a241ULL, 
0x0048410010208001ULL, 0x4440210009008010ULL, 0xa40400e004820320ULL, 0x0009040400883000ULL, 0x6002a00800420140ULL, 0x0032018021010400ULL, 0x0c96005000c40809ULL, 0x00a000400880a040ULL, 
0x1080004040204208ULL, 0x0054400004200220ULL, 0xc020010008081010ULL, 0x4ec04010c1041000ULL, 0x4120840800980041ULL, 0x2000010180040042ULL, 0x10010200c0008200ULL, 0x8248c400c0002880ULL, 
0x000c488060800095ULL, 0x0800200389080040ULL, 0x0002002100510400ULL, 0x0148091050080200ULL, 0x4002002042000403ULL, 0x04000c8400150200ULL, 0x080200100c880060ULL, 0x0000088040200040ULL, 
0x00a1002082042010ULL, 0x0002500041982800ULL, 0x0080809060044400ULL, 0x4000b00286210080ULL, 0x0002080200560001ULL, 0x010043091000a010ULL, 0x480024c001100808ULL, 0x04090a0080060404ULL, 
0x1109104080001100ULL, 0x402019001001e4a0ULL, 0x080004c020001100ULL, 0x0114048004080082ULL, 0x0205000408b01100ULL, 0x02058a0414210080ULL, 0x008a100400421100ULL, 0x0881000080422300ULL, 
0x1200820020410116ULL, 0x00088819020a0042ULL, 0x000080d004402202ULL, 0x400013020040a09aULL, 0x0000031200600482ULL, 0x0002000085100402ULL, 0x0010808805021004ULL, 0x0030012081004412ULL};
constexpr std::array<U64, 64> bishopmagics = {0x04400080048020a6ULL, 0x2004004024000c40ULL, 0x8848000108042020ULL, 0x4004102008020000ULL, 0x0020852005008000ULL, 0x0000050008000064ULL, 0x000000c400940088ULL, 0x0501800204022200ULL, 
0x0000a00108400540ULL, 0x0000880002090308ULL, 0x10200c2408802400ULL, 0x0924090008080000ULL, 0x0130840210040421ULL, 0x0000000c39020840ULL, 0x0820001008000801ULL, 0x0004041100141200ULL, 
0x0048800210040220ULL, 0x0000400020a20128ULL, 0x2020040028010908ULL, 0x0100080410801008ULL, 0x1200850404094153ULL, 0x6080102802003c10ULL, 0x0881000511480110ULL, 0x089208a000680200ULL, 
0xc029014108028101ULL, 0x0000128008202001ULL, 0x0010014434002012ULL, 0x00040100022c880ULL, 0x4004010004410000ULL, 0x042020906840a222ULL, 0x0002000080404202ULL, 0x101060004e0042a9ULL, 
0x0020080402101000ULL, 0x080a412200030022ULL, 0x04128800a0080051ULL, 0x80c0908820110010ULL, 0x8001409028018440ULL, 0x000008d100400400ULL, 0x0404404490008024ULL, 0x2000620401020008ULL, 
0x0083044008126006ULL, 0x0202220500208080ULL, 0x00100000d4880881ULL, 0x8000004088821201ULL, 0x8005008014020050ULL, 0x0000801082802109ULL, 0x2120004003000004ULL, 0x08421b1404010881ULL, 
0x200000a010220109ULL, 0x002200008010a008ULL, 0x0000000220040400ULL, 0x0410242440009200ULL, 0x0820006020402000ULL, 0x620c00aa0a940001ULL, 0x40a1008504820800ULL, 0x8000100041080040ULL, 
0x0008080a40108500ULL, 0x2000000022bc0380ULL, 0x8080400200040201ULL, 0x0000000180020800ULL, 0x000a010801000c00ULL, 0x21120000a411039cULL, 0x100001118109a0c0ULL, 0x0080850084003140ULL};
constexpr std::array<std::array<uint64_t, 64>, 8> RAYS ={{{{0x0000000000000000ULL, 0x0000000000000100ULL, 0x0000000000010200ULL, 0x0000000001020400ULL, 0x0000000102040800ULL, 0x0000010204081000ULL, 0x0001020408102000ULL, 0x0102040810204000ULL,
0x0000000000000000ULL, 0x0000000000010000ULL, 0x0000000001020000ULL, 0x0000000102040000ULL, 0x0000010204080000ULL, 0x0001020408100000ULL, 0x0102040810200000ULL, 0x0204081020400000ULL,
0x0000000000000000ULL, 0x0000000001000000ULL, 0x0000000102000000ULL, 0x0000010204000000ULL, 0x0001020408000000ULL, 0x0102040810000000ULL, 0x0204081020000000ULL, 0x0408102040000000ULL,
0x0000000000000000ULL, 0x0000000100000000ULL, 0x0000010200000000ULL, 0x0001020400000000ULL, 0x0102040800000000ULL, 0x0204081000000000ULL, 0x0408102000000000ULL, 0x0810204000000000ULL,
0x0000000000000000ULL, 0x0000010000000000ULL, 0x0001020000000000ULL, 0x0102040000000000ULL, 0x0204080000000000ULL, 0x0408100000000000ULL, 0x0810200000000000ULL, 0x1020400000000000ULL,
0x0000000000000000ULL, 0x0001000000000000ULL, 0x0102000000000000ULL, 0x0204000000000000ULL, 0x0408000000000000ULL, 0x0810000000000000ULL, 0x1020000000000000ULL, 0x2040000000000000ULL,
0x0000000000000000ULL, 0x0100000000000000ULL, 0x0200000000000000ULL, 0x0400000000000000ULL, 0x0800000000000000ULL, 0x1000000000000000ULL, 0x2000000000000000ULL, 0x4000000000000000ULL,
0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}},
{{0x0101010101010100ULL, 0x0202020202020200ULL, 0x0404040404040400ULL, 0x0808080808080800ULL, 0x1010101010101000ULL, 0x2020202020202000ULL, 0x4040404040404000ULL, 0x8080808080808000ULL,
0x0101010101010000ULL, 0x0202020202020000ULL, 0x0404040404040000ULL, 0x0808080808080000ULL, 0x1010101010100000ULL, 0x2020202020200000ULL, 0x4040404040400000ULL, 0x8080808080800000ULL,
0x0101010101000000ULL, 0x0202020202000000ULL, 0x0404040404000000ULL, 0x0808080808000000ULL, 0x1010101010000000ULL, 0x2020202020000000ULL, 0x4040404040000000ULL, 0x8080808080000000ULL,
0x0101010100000000ULL, 0x0202020200000000ULL, 0x0404040400000000ULL, 0x0808080800000000ULL, 0x1010101000000000ULL, 0x2020202000000000ULL, 0x4040404000000000ULL, 0x8080808000000000ULL,
0x0101010000000000ULL, 0x0202020000000000ULL, 0x0404040000000000ULL, 0x0808080000000000ULL, 0x1010100000000000ULL, 0x2020200000000000ULL, 0x4040400000000000ULL, 0x8080800000000000ULL,
0x0101000000000000ULL, 0x0202000000000000ULL, 0x0404000000000000ULL, 0x0808000000000000ULL, 0x1010000000000000ULL, 0x2020000000000000ULL, 0x4040000000000000ULL, 0x8080000000000000ULL,
0x0100000000000000ULL, 0x0200000000000000ULL, 0x0400000000000000ULL, 0x0800000000000000ULL, 0x1000000000000000ULL, 0x2000000000000000ULL, 0x4000000000000000ULL, 0x8000000000000000ULL,
0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}},
{{0x8040201008040200ULL, 0x0080402010080400ULL, 0x0000804020100800ULL, 0x0000008040201000ULL, 0x0000000080402000ULL, 0x0000000000804000ULL, 0x0000000000008000ULL, 0x0000000000000000ULL,
0x4020100804020000ULL, 0x8040201008040000ULL, 0x0080402010080000ULL, 0x0000804020100000ULL, 0x0000008040200000ULL, 0x0000000080400000ULL, 0x0000000000800000ULL, 0x0000000000000000ULL,
0x2010080402000000ULL, 0x4020100804000000ULL, 0x8040201008000000ULL, 0x0080402010000000ULL, 0x0000804020000000ULL, 0x0000008040000000ULL, 0x0000000080000000ULL, 0x0000000000000000ULL,
0x1008040200000000ULL, 0x2010080400000000ULL, 0x4020100800000000ULL, 0x8040201000000000ULL, 0x0080402000000000ULL, 0x0000804000000000ULL, 0x0000008000000000ULL, 0x0000000000000000ULL,
0x0804020000000000ULL, 0x1008040000000000ULL, 0x2010080000000000ULL, 0x4020100000000000ULL, 0x8040200000000000ULL, 0x0080400000000000ULL, 0x0000800000000000ULL, 0x0000000000000000ULL,
0x0402000000000000ULL, 0x0804000000000000ULL, 0x1008000000000000ULL, 0x2010000000000000ULL, 0x4020000000000000ULL, 0x8040000000000000ULL, 0x0080000000000000ULL, 0x0000000000000000ULL,
0x0200000000000000ULL, 0x0400000000000000ULL, 0x0800000000000000ULL, 0x1000000000000000ULL, 0x2000000000000000ULL, 0x4000000000000000ULL, 0x8000000000000000ULL, 0x0000000000000000ULL,
0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL}},
{{0x00000000000000FEULL, 0x00000000000000FCULL, 0x00000000000000F8ULL, 0x00000000000000F0ULL, 0x00000000000000E0ULL, 0x00000000000000C0ULL, 0x0000000000000080ULL, 0x0000000000000000ULL,
0x000000000000FE00ULL, 0x000000000000FC00ULL, 0x000000000000F800ULL, 0x000000000000F000ULL, 0x000000000000E000ULL, 0x000000000000C000ULL, 0x0000000000008000ULL, 0x0000000000000000ULL,
0x0000000000FE0000ULL, 0x0000000000FC0000ULL, 0x0000000000F80000ULL, 0x0000000000F00000ULL, 0x0000000000E00000ULL, 0x0000000000C00000ULL, 0x0000000000800000ULL, 0x0000000000000000ULL,
0x00000000FE000000ULL, 0x00000000FC000000ULL, 0x00000000F8000000ULL, 0x00000000F0000000ULL, 0x00000000E0000000ULL, 0x00000000C0000000ULL, 0x0000000080000000ULL, 0x0000000000000000ULL,
0x000000FE00000000ULL, 0x000000FC00000000ULL, 0x000000F800000000ULL, 0x000000F000000000ULL, 0x000000E000000000ULL, 0x000000C000000000ULL, 0x0000008000000000ULL, 0x0000000000000000ULL,
0x0000FE0000000000ULL, 0x0000FC0000000000ULL, 0x0000F80000000000ULL, 0x0000F00000000000ULL, 0x0000E00000000000ULL, 0x0000C00000000000ULL, 0x0000800000000000ULL, 0x0000000000000000ULL,
0x00FE000000000000ULL, 0x00FC000000000000ULL, 0x00F8000000000000ULL, 0x00F0000000000000ULL, 0x00E0000000000000ULL, 0x00C0000000000000ULL, 0x0080000000000000ULL, 0x0000000000000000ULL,
0xFE00000000000000ULL, 0xFC00000000000000ULL, 0xF800000000000000ULL, 0xF000000000000000ULL, 0xE000000000000000ULL, 0xC000000000000000ULL, 0x8000000000000000ULL, 0x0000000000000000ULL}},
{{0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL,
0x0000000000000002ULL, 0x0000000000000004ULL, 0x0000000000000008ULL, 0x0000000000000010ULL, 0x0000000000000020ULL, 0x0000000000000040ULL, 0x0000000000000080ULL, 0x0000000000000000ULL,
0x0000000000000204ULL, 0x0000000000000408ULL, 0x0000000000000810ULL, 0x0000000000001020ULL, 0x0000000000002040ULL, 0x0000000000004080ULL, 0x0000000000008000ULL, 0x0000000000000000ULL,
0x0000000000020408ULL, 0x0000000000040810ULL, 0x0000000000081020ULL, 0x0000000000102040ULL, 0x0000000000204080ULL, 0x0000000000408000ULL, 0x0000000000800000ULL, 0x0000000000000000ULL,
0x0000000002040810ULL, 0x0000000004081020ULL, 0x0000000008102040ULL, 0x0000000010204080ULL, 0x0000000020408000ULL, 0x0000000040800000ULL, 0x0000000080000000ULL, 0x0000000000000000ULL,
0x0000000204081020ULL, 0x0000000408102040ULL, 0x0000000810204080ULL, 0x0000001020408000ULL, 0x0000002040800000ULL, 0x0000004080000000ULL, 0x0000008000000000ULL, 0x0000000000000000ULL,
0x0000020408102040ULL, 0x0000040810204080ULL, 0x0000081020408000ULL, 0x0000102040800000ULL, 0x0000204080000000ULL, 0x0000408000000000ULL, 0x0000800000000000ULL, 0x0000000000000000ULL,
0x0002040810204080ULL, 0x0004081020408000ULL, 0x0008102040800000ULL, 0x0010204080000000ULL, 0x0020408000000000ULL, 0x0040800000000000ULL, 0x0080000000000000ULL, 0x0000000000000000ULL}},
{{0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL,
0x0000000000000001ULL, 0x0000000000000002ULL, 0x0000000000000004ULL, 0x0000000000000008ULL, 0x0000000000000010ULL, 0x0000000000000020ULL, 0x0000000000000040ULL, 0x0000000000000080ULL,
0x0000000000000101ULL, 0x0000000000000202ULL, 0x0000000000000404ULL, 0x0000000000000808ULL, 0x0000000000001010ULL, 0x0000000000002020ULL, 0x0000000000004040ULL, 0x0000000000008080ULL,
0x0000000000010101ULL, 0x0000000000020202ULL, 0x0000000000040404ULL, 0x0000000000080808ULL, 0x0000000000101010ULL, 0x0000000000202020ULL, 0x0000000000404040ULL, 0x0000000000808080ULL,
0x0000000001010101ULL, 0x0000000002020202ULL, 0x0000000004040404ULL, 0x0000000008080808ULL, 0x0000000010101010ULL, 0x0000000020202020ULL, 0x0000000040404040ULL, 0x0000000080808080ULL,
0x0000000101010101ULL, 0x0000000202020202ULL, 0x0000000404040404ULL, 0x0000000808080808ULL, 0x0000001010101010ULL, 0x0000002020202020ULL, 0x0000004040404040ULL, 0x0000008080808080ULL,
0x0000010101010101ULL, 0x0000020202020202ULL, 0x0000040404040404ULL, 0x0000080808080808ULL, 0x0000101010101010ULL, 0x0000202020202020ULL, 0x0000404040404040ULL, 0x0000808080808080ULL,
0x0001010101010101ULL, 0x0002020202020202ULL, 0x0004040404040404ULL, 0x0008080808080808ULL, 0x0010101010101010ULL, 0x0020202020202020ULL, 0x0040404040404040ULL, 0x0080808080808080ULL}},
{{0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL, 0x0000000000000000ULL,
0x0000000000000000ULL, 0x0000000000000001ULL, 0x0000000000000002ULL, 0x0000000000000004ULL, 0x0000000000000008ULL, 0x0000000000000010ULL, 0x0000000000000020ULL, 0x0000000000000040ULL,
0x0000000000000000ULL, 0x0000000000000100ULL, 0x0000000000000201ULL, 0x0000000000000402ULL, 0x0000000000000804ULL, 0x0000000000001008ULL, 0x0000000000002010ULL, 0x0000000000004020ULL,
0x0000000000000000ULL, 0x0000000000010000ULL, 0x0000000000020100ULL, 0x0000000000040201ULL, 0x0000000000080402ULL, 0x0000000000100804ULL, 0x0000000000201008ULL, 0x0000000000402010ULL,
0x0000000000000000ULL, 0x0000000001000000ULL, 0x0000000002010000ULL, 0x0000000004020100ULL, 0x0000000008040201ULL, 0x0000000010080402ULL, 0x0000000020100804ULL, 0x0000000040201008ULL,
0x0000000000000000ULL, 0x0000000100000000ULL, 0x0000000201000000ULL, 0x0000000402010000ULL, 0x0000000804020100ULL, 0x0000001008040201ULL, 0x0000002010080402ULL, 0x0000004020100804ULL,
0x0000000000000000ULL, 0x0000010000000000ULL, 0x0000020100000000ULL, 0x0000040201000000ULL, 0x0000080402010000ULL, 0x0000100804020100ULL, 0x0000201008040201ULL, 0x0000402010080402ULL,
0x0000000000000000ULL, 0x0001000000000000ULL, 0x0002010000000000ULL, 0x0004020100000000ULL, 0x0008040201000000ULL, 0x0010080402010000ULL, 0x0020100804020100ULL, 0x0040201008040201ULL}},
{{0x0000000000000000ULL, 0x0000000000000001ULL, 0x0000000000000003ULL, 0x0000000000000007ULL, 0x000000000000000FULL, 0x000000000000001FULL, 0x000000000000003FULL, 0x000000000000007FULL,
0x0000000000000000ULL, 0x0000000000000100ULL, 0x0000000000000300ULL, 0x0000000000000700ULL, 0x0000000000000F00ULL, 0x0000000000001F00ULL, 0x0000000000003F00ULL, 0x0000000000007F00ULL,
0x0000000000000000ULL, 0x0000000000010000ULL, 0x0000000000030000ULL, 0x0000000000070000ULL, 0x00000000000F0000ULL, 0x00000000001F0000ULL, 0x00000000003F0000ULL, 0x00000000007F0000ULL,
0x0000000000000000ULL, 0x0000000001000000ULL, 0x0000000003000000ULL, 0x0000000007000000ULL, 0x000000000F000000ULL, 0x000000001F000000ULL, 0x000000003F000000ULL, 0x000000007F000000ULL,
0x0000000000000000ULL, 0x0000000100000000ULL, 0x0000000300000000ULL, 0x0000000700000000ULL, 0x0000000F00000000ULL, 0x0000001F00000000ULL, 0x0000003F00000000ULL, 0x0000007F00000000ULL,
0x0000000000000000ULL, 0x0000010000000000ULL, 0x0000030000000000ULL, 0x0000070000000000ULL, 0x00000F0000000000ULL, 0x00001F0000000000ULL, 0x00003F0000000000ULL, 0x00007F0000000000ULL,
0x0000000000000000ULL, 0x0001000000000000ULL, 0x0003000000000000ULL, 0x0007000000000000ULL, 0x000F000000000000ULL, 0x001F000000000000ULL, 0x003F000000000000ULL, 0x007F000000000000ULL,
0x0000000000000000ULL, 0x0100000000000000ULL, 0x0300000000000000ULL, 0x0700000000000000ULL, 0x0F00000000000000ULL, 0x1F00000000000000ULL, 0x3F00000000000000ULL, 0x7F00000000000000ULL}}}};
